/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package veterinaria;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.JTextField;
import javax.swing.SpinnerModel;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.DocumentFilter;

/**
 *
 * @author andre
 */
class UppercaseDocumentFilter extends DocumentFilter {

    @Override
    public void insertString(DocumentFilter.FilterBypass fb, int offset,
            String text, AttributeSet attr) throws BadLocationException {

        fb.insertString(offset, text.toUpperCase(), attr);
    }

    @Override
    public void replace(DocumentFilter.FilterBypass fb, int offset, int length,
            String text, AttributeSet attrs) throws BadLocationException {

        fb.replace(offset, length, text.toUpperCase(), attrs);
    }
}

public class Cliente extends javax.swing.JFrame {

    /**
     * Creates new form Cliente
     */
    File archivo1;
    private static Scanner x;
    String tempo;
    String ceduTemp;
    int cont = 0;

    public Cliente() {
        initComponents();
        JTextFieldDateEditor editor = (JTextFieldDateEditor) dateC.getDateEditor();
        editor.setEditable(false);
        JTextFieldDateEditor editor1 = (JTextFieldDateEditor) dateC1.getDateEditor();
        editor1.setEditable(false);
        JTextFieldDateEditor editor2 = (JTextFieldDateEditor) diaCita.getDateEditor();
        editor2.setEditable(false);
        DocumentFilter filter = new UppercaseDocumentFilter();
        ((AbstractDocument) nombreF.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) direccion.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) nombrePerro.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) razaF.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) colorF.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) razaF1.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) colorF1.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) nombrePerro1.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) nomPerro2.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) direccion1.getDocument()).setDocumentFilter(filter);
        ((AbstractDocument) nombreF1.getDocument()).setDocumentFilter(filter);

        dateC.setMaxSelectableDate(new Date());
        dateC1.setMaxSelectableDate(new Date());
        diaCita.setMinSelectableDate(new Date());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        nuevoC = new javax.swing.JFrame();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        razaF = new javax.swing.JTextField();
        nombreF = new javax.swing.JTextField();
        colorF = new javax.swing.JTextField();
        dateC = new com.toedter.calendar.JDateChooser();
        agregarNuevoRegistro = new javax.swing.JButton();
        cedulaF = new javax.swing.JFormattedTextField();
        jButton4 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        celular = new javax.swing.JFormattedTextField();
        jLabel21 = new javax.swing.JLabel();
        nombrePerro = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        direccion = new javax.swing.JTextField();
        aviso = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        tablaF = new javax.swing.JFrame();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        deleteBtn = new javax.swing.JButton();
        saveBtn = new javax.swing.JButton();
        raiseBtn = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        raiseTF = new javax.swing.JTextField();
        nuevoC1 = new javax.swing.JFrame();
        jLabel12 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        razaF1 = new javax.swing.JTextField();
        nombrePerro1 = new javax.swing.JTextField();
        colorF1 = new javax.swing.JTextField();
        dateC1 = new com.toedter.calendar.JDateChooser();
        actualizar = new javax.swing.JButton();
        cedulaF1 = new javax.swing.JFormattedTextField();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        direccion1 = new javax.swing.JTextField();
        celular1 = new javax.swing.JFormattedTextField();
        jLabel24 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        nombreF1 = new javax.swing.JTextField();
        citas = new javax.swing.JFrame();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        nomPerro2 = new javax.swing.JTextField();
        cedulaF3 = new javax.swing.JFormattedTextField();
        jButton10 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        tipo = new javax.swing.JComboBox<>();
        hora = new javax.swing.JComboBox<>();
        agendar = new javax.swing.JButton();
        diaCita = new com.toedter.calendar.JDateChooser();
        valido = new javax.swing.JLabel();
        addBtn3 = new javax.swing.JButton();
        jLabel31 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        addBtn4 = new javax.swing.JButton();
        valido1 = new javax.swing.JLabel();
        diaCita1 = new com.toedter.calendar.JDateChooser();
        agendar1 = new javax.swing.JButton();
        hora1 = new javax.swing.JComboBox<>();
        tipo1 = new javax.swing.JComboBox<>();
        jButton13 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        cedulaF4 = new javax.swing.JFormattedTextField();
        nomPerro3 = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        numero = new javax.swing.JSpinner();
        jPanel6 = new javax.swing.JPanel();
        tablaF1 = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        table1 = new javax.swing.JTable();
        deleteBtn1 = new javax.swing.JButton();
        saveBtn1 = new javax.swing.JButton();
        raiseBtn1 = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        raiseTF1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        nuevoC.setAlwaysOnTop(true);
        nuevoC.setBackground(new java.awt.Color(255, 255, 255));
        nuevoC.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        nuevoC.setResizable(false);
        nuevoC.setSize(new java.awt.Dimension(1140, 710));
        nuevoC.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perrito.jpg"))); // NOI18N
        nuevoC.getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, -1, 470));

        jPanel2.setBackground(new java.awt.Color(236, 255, 236));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/color.png"))); // NOI18N
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 470, -1, -1));

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cedula.png"))); // NOI18N
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 290, -1, -1));

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perro.png"))); // NOI18N
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 350, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/raza.png"))); // NOI18N
        jPanel2.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 410, -1, -1));

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/fechaN.png"))); // NOI18N
        jPanel2.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 530, -1, -1));

        razaF.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(razaF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 410, 365, 52));

        nombreF.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(nombreF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 365, 52));

        colorF.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(colorF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 365, 52));
        jPanel2.add(dateC, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 530, 365, 52));

        agregarNuevoRegistro.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/agregar.png"))); // NOI18N
        agregarNuevoRegistro.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agregarNuevoRegistro.setBorderPainted(false);
        agregarNuevoRegistro.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agregarNuevoRegistro.setOpaque(false);
        agregarNuevoRegistro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agregarNuevoRegistroActionPerformed(evt);
            }
        });
        jPanel2.add(agregarNuevoRegistro, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 610, -1, -1));

        cedulaF.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cedulaF.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(cedulaF, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 290, 365, 52));

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras.png"))); // NOI18N
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton4.setBorderPainted(false);
        jButton4.setOpaque(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 610, -1, -1));

        jLabel20.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Celular.png"))); // NOI18N
        jPanel2.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 230, -1, -1));

        celular.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        celular.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(celular, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 230, 365, 52));

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/nombre.png"))); // NOI18N
        jPanel2.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        nombrePerro.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(nombrePerro, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 365, 52));

        jLabel22.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Direccion.png"))); // NOI18N
        jPanel2.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, -1, -1));

        direccion.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel2.add(direccion, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 170, 365, 52));

        aviso.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        aviso.setForeground(new java.awt.Color(0, 204, 0));
        jPanel2.add(aviso, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 80, -1, -1));

        jLabel23.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(51, 204, 0));
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Para agregar a tu mascota rellena todos los campos y no uses \",\"");
        jPanel2.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 50, 650, -1));

        nuevoC.getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 0, 720, 670));

        tablaF.setMinimumSize(new java.awt.Dimension(500, 500));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Direccion", "Celular", "Cedula", "Nombre del Perro", "Raza", "Color", "Fecha de Nacimiento"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(table);

        deleteBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteBtn.setText("Eliminar");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        saveBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saveBtn.setText("Guardar");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        raiseBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        raiseBtn.setText("Subir Sueldos");
        raiseBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raiseBtnActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("%");

        raiseTF.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout tablaFLayout = new javax.swing.GroupLayout(tablaF.getContentPane());
        tablaF.getContentPane().setLayout(tablaFLayout);
        tablaFLayout.setHorizontalGroup(
            tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 449, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(raiseBtn)
                    .addGroup(tablaFLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteBtn)
                            .addComponent(saveBtn)
                            .addComponent(raiseTF, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablaFLayout.setVerticalGroup(
            tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaFLayout.createSequentialGroup()
                .addGroup(tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablaFLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tablaFLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(deleteBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn)
                        .addGap(27, 27, 27)
                        .addGroup(tablaFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(raiseTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(raiseBtn)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        nuevoC1.setAlwaysOnTop(true);
        nuevoC1.setBackground(new java.awt.Color(255, 255, 255));
        nuevoC1.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        nuevoC1.setResizable(false);
        nuevoC1.setSize(new java.awt.Dimension(1130, 680));
        nuevoC1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perrito.jpg"))); // NOI18N
        nuevoC1.getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(2, 0, -1, 310));

        jPanel3.setBackground(new java.awt.Color(204, 204, 204));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/color.png"))); // NOI18N
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 360, -1, -1));

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cedula.png"))); // NOI18N
        jPanel3.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(19, 98, -1, -1));

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perro.png"))); // NOI18N
        jPanel3.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, -1, -1));

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/raza.png"))); // NOI18N
        jPanel3.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 300, -1, -1));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/fechaN.png"))); // NOI18N
        jPanel3.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 420, -1, -1));

        razaF1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(razaF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 300, 410, 52));

        nombrePerro1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(nombrePerro1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 330, 52));

        colorF1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(colorF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 360, 410, 52));
        jPanel3.add(dateC1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 420, 410, 52));

        actualizar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        actualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/actualizar.png"))); // NOI18N
        actualizar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        actualizar.setBorderPainted(false);
        actualizar.setOpaque(false);
        actualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                actualizarActionPerformed(evt);
            }
        });
        jPanel3.add(actualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 600, -1, -1));

        cedulaF1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cedulaF1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cedulaF1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaF1ActionPerformed(evt);
            }
        });
        jPanel3.add(cedulaF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 98, 330, 52));

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Buscar.png"))); // NOI18N
        jButton5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton5.setBorderPainted(false);
        jButton5.setOpaque(false);
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 130, -1, 50));

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cancelar.png"))); // NOI18N
        jButton6.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton6.setBorderPainted(false);
        jButton6.setOpaque(false);
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 600, -1, -1));

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras.png"))); // NOI18N
        jButton8.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton8.setBorderPainted(false);
        jButton8.setOpaque(false);
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 0, -1, -1));

        jLabel26.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Celular.png"))); // NOI18N
        jPanel3.add(jLabel26, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 540, -1, -1));

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Direccion.png"))); // NOI18N
        jPanel3.add(jLabel29, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, -1, -1));

        direccion1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(direccion1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 480, 410, 52));

        celular1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        celular1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(celular1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, 410, 52));

        jLabel24.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel24.setForeground(new java.awt.Color(51, 204, 0));
        jLabel24.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel24.setText("<html> Para actualizar los datos, escribe tu cedula y el nombre del perro,<br> luego presiona en buscar. No dejes ningun campo vacio.");
        jPanel3.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 30, 650, -1));

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/nombre.png"))); // NOI18N
        jPanel3.add(jLabel30, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 240, -1, -1));

        nombreF1.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel3.add(nombreF1, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 410, 52));

        nuevoC1.getContentPane().add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(406, 0, 720, -1));

        citas.setAlwaysOnTop(true);
        citas.setBackground(new java.awt.Color(255, 255, 255));
        citas.setBounds(new java.awt.Rectangle(0, 0, 0, 0));
        citas.setSize(new java.awt.Dimension(1200, 600));
        citas.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(1200, 510));

        jPanel5.setBackground(new java.awt.Color(227, 254, 230));
        jPanel5.setPreferredSize(new java.awt.Dimension(1129, 600));
        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cedula.png"))); // NOI18N
        jPanel5.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perro.png"))); // NOI18N
        jPanel5.add(jLabel28, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, -1, -1));

        nomPerro2.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel5.add(nomPerro2, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 210, 52));

        cedulaF3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cedulaF3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cedulaF3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaF3ActionPerformed(evt);
            }
        });
        jPanel5.add(cedulaF3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 210, 52));

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Buscar.png"))); // NOI18N
        jButton10.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton10.setBorderPainted(false);
        jButton10.setOpaque(false);
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton10, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, -1, 50));

        jButton12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras.png"))); // NOI18N
        jButton12.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton12.setBorderPainted(false);
        jButton12.setOpaque(false);
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton12, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, -1, -1));

        tipo.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tipo.setForeground(new java.awt.Color(0, 153, 0));
        tipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consulta veterinario\t $60.000= tiempo de servicio 1 hora", "Control\t\t $10.000= tiempo de servicio 1/2 hora", "Desparasitación\t $40.000= tiempo de servicio 1/2 hora", "Vacunación\t\t $35.000= tiempo de servicio 1/2 hora", "Guarderia solo por día \t $35.000 ", "Radiologia\t\t $100.000= tiempo de servicio 1 hora", "Baño\t\t $25.000= tiempo de servicio 2 horas" }));
        jPanel5.add(tipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, -1, -1));

        hora.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        hora.setForeground(new java.awt.Color(0, 153, 0));
        hora.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "8:30", "9:00", "9:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30" }));
        hora.setToolTipText("");
        hora.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horaActionPerformed(evt);
            }
        });
        jPanel5.add(hora, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, 80, -1));

        agendar.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Agendar.png"))); // NOI18N
        agendar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agendar.setBorderPainted(false);
        agendar.setOpaque(false);
        agendar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendarActionPerformed(evt);
            }
        });
        jPanel5.add(agendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 460, -1, -1));
        jPanel5.add(diaCita, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 140, -1));

        valido.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        valido.setForeground(new java.awt.Color(51, 204, 0));
        jPanel5.add(valido, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, -1, -1));

        addBtn3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addBtn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cancelar.png"))); // NOI18N
        addBtn3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn3.setBorderPainted(false);
        addBtn3.setOpaque(false);
        addBtn3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn3ActionPerformed(evt);
            }
        });
        jPanel5.add(addBtn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 460, -1, -1));

        jLabel31.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel31.setForeground(new java.awt.Color(51, 204, 0));
        jLabel31.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel31.setText("<html> Para agendar una cita, escribe tu cedula y el nombre del perro,<br> luego presiona en buscar. No dejes ningun campo vacio.");
        jPanel5.add(jLabel31, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 650, -1));

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perrito.jpg"))); // NOI18N
        jPanel5.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 520));

        jTabbedPane1.addTab("Agregar cita", jPanel5);

        jPanel4.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel32.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perrito.jpg"))); // NOI18N
        jPanel4.add(jLabel32, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 520));

        jLabel33.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(51, 204, 0));
        jLabel33.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel33.setText("<html> Para agendar una cita, escribe tu cedula y el nombre del perro,<br> luego presiona en buscar. No dejes ningun campo vacio.");
        jPanel4.add(jLabel33, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 30, 650, -1));

        addBtn4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        addBtn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cancelar.png"))); // NOI18N
        addBtn4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addBtn4.setBorderPainted(false);
        addBtn4.setOpaque(false);
        addBtn4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtn4ActionPerformed(evt);
            }
        });
        jPanel4.add(addBtn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(840, 460, -1, -1));

        valido1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        valido1.setForeground(new java.awt.Color(51, 204, 0));
        jPanel4.add(valido1, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 190, -1, -1));
        jPanel4.add(diaCita1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, 140, -1));

        agendar1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        agendar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Agendar.png"))); // NOI18N
        agendar1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        agendar1.setBorderPainted(false);
        agendar1.setOpaque(false);
        agendar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                agendar1ActionPerformed(evt);
            }
        });
        jPanel4.add(agendar1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 460, -1, -1));

        hora1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        hora1.setForeground(new java.awt.Color(0, 153, 0));
        hora1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8:00", "8:30", "9:00", "9:30", "10:00", "10:30", "11:00", "11:30", "12:00", "12:30", "14:00", "14:30", "15:00", "15:30", "16:00", "16:30", "17:00", "17:30" }));
        hora1.setToolTipText("");
        hora1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hora1ActionPerformed(evt);
            }
        });
        jPanel4.add(hora1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 310, 80, -1));

        tipo1.setFont(new java.awt.Font("Century Gothic", 0, 14)); // NOI18N
        tipo1.setForeground(new java.awt.Color(0, 153, 0));
        tipo1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Consulta veterinario\t $60.000= tiempo de servicio 1 hora", "Control\t\t $10.000= tiempo de servicio 1/2 hora", "Desparasitación\t $40.000= tiempo de servicio 1/2 hora", "Vacunación\t\t $35.000= tiempo de servicio 1/2 hora", "Guarderia solo por día \t $35.000 ", "Radiologia\t\t $100.000= tiempo de servicio 1 hora", "Baño\t\t $25.000= tiempo de servicio 2 horas" }));
        jPanel4.add(tipo1, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, -1, -1));

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras.png"))); // NOI18N
        jButton13.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton13.setBorderPainted(false);
        jButton13.setOpaque(false);
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton13, new org.netbeans.lib.awtextra.AbsoluteConstraints(1050, 20, -1, -1));

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Buscar.png"))); // NOI18N
        jButton11.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton11.setBorderPainted(false);
        jButton11.setOpaque(false);
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel4.add(jButton11, new org.netbeans.lib.awtextra.AbsoluteConstraints(820, 120, -1, 50));

        cedulaF4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0"))));
        cedulaF4.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        cedulaF4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cedulaF4ActionPerformed(evt);
            }
        });
        jPanel4.add(cedulaF4, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 100, 210, 52));

        nomPerro3.setFont(new java.awt.Font("Century Gothic", 0, 18)); // NOI18N
        jPanel4.add(nomPerro3, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 160, 210, 52));

        jLabel34.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/perro.png"))); // NOI18N
        jPanel4.add(jLabel34, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, -1, -1));

        jLabel35.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/cedula.png"))); // NOI18N
        jPanel4.add(jLabel35, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 100, -1, -1));

        numero.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                numeroStateChanged(evt);
            }
        });
        jPanel4.add(numero, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 140, -1, -1));

        jTabbedPane1.addTab("Modificar una cita", jPanel4);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1195, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 522, Short.MAX_VALUE)
        );

        jTabbedPane1.addTab("Comprobar cita", jPanel6);

        citas.getContentPane().add(jTabbedPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1180, 550));
        jTabbedPane1.getAccessibleContext().setAccessibleName("Agregar cita");

        tablaF1.setMinimumSize(new java.awt.Dimension(500, 500));

        table1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Tipo", "Fecha", "Hora", "Confirmación"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(table1);

        deleteBtn1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        deleteBtn1.setText("Eliminar");
        deleteBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtn1ActionPerformed(evt);
            }
        });

        saveBtn1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        saveBtn1.setText("Guardar");
        saveBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtn1ActionPerformed(evt);
            }
        });

        raiseBtn1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        raiseBtn1.setText("Subir Sueldos");
        raiseBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                raiseBtn1ActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel19.setText("%");

        raiseTF1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N

        javax.swing.GroupLayout tablaF1Layout = new javax.swing.GroupLayout(tablaF1.getContentPane());
        tablaF1.getContentPane().setLayout(tablaF1Layout);
        tablaF1Layout.setHorizontalGroup(
            tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaF1Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(raiseBtn1)
                    .addGroup(tablaF1Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteBtn1)
                            .addComponent(saveBtn1)
                            .addComponent(raiseTF1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        tablaF1Layout.setVerticalGroup(
            tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tablaF1Layout.createSequentialGroup()
                .addGroup(tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tablaF1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(tablaF1Layout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(deleteBtn1)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn1)
                        .addGap(27, 27, 27)
                        .addGroup(tablaF1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(raiseTF1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(raiseBtn1)))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel3.setFont(new java.awt.Font("Century Gothic", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 204, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Bienvenido");

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 204, 0));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Para agendar una cita o actualizarla presiona agendar");

        jLabel5.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 204, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("<html> Si eres nuevo usuario o quieres agregar una <br> nueva mascota, presiona en nuevo registro ");

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/nuevoregistro.png"))); // NOI18N
        jButton1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jButton1.setBorderPainted(false);
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/actualizarR.png"))); // NOI18N
        jButton2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton2.setBorderPainted(false);
        jButton2.setOpaque(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/Agendar.png"))); // NOI18N
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton3.setBorderPainted(false);
        jButton3.setOpaque(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(51, 204, 0));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setText("<html>Si quieres actualizar los datos de tu mascota <br> presiona actualizar registro ");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/atras.png"))); // NOI18N
        jButton7.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton7.setBorderPainted(false);
        jButton7.setOpaque(false);
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jButton1)
                                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 505, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 32, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(225, 225, 225)
                        .addComponent(jButton2)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton3)
                .addGap(192, 192, 192))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(384, Short.MAX_VALUE)
                    .addComponent(jButton7)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(457, Short.MAX_VALUE)
                    .addComponent(jButton7)
                    .addGap(10, 10, 10)))
        );

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/media/pexels-sam-lion-5732461_1.jpg"))); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        nuevoC1.setVisible(true);
        razaF1.setVisible(false);
        nombreF1.setVisible(false);
        colorF1.setVisible(false);
        direccion1.setVisible(false);
        celular1.setVisible(false);
        dateC1.setVisible(false);
        actualizar.setVisible(false);
        cedulaF1.setEditable(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        citas.setVisible(true);
        tipo.setVisible(false);
        hora.setVisible(false);
        diaCita.setVisible(false);
        agendar.setVisible(false);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void agregarNuevoRegistroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agregarNuevoRegistroActionPerformed
        if (((JTextField) dateC.getDateEditor().getUiComponent()).getText().isEmpty()
                || nombreF.getText().isEmpty()
                || direccion.getText().isEmpty()
                || celular.getText().isEmpty()
                || cedulaF.getText().isEmpty()
                || razaF.getText().isEmpty()
                || colorF.getText().isEmpty()
                || nombrePerro.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los componentes");
        } else {
            //Metodo para agregar usuarios
            String sDir = "C:\\user";
            File f = new File(sDir);
            String ruta = "C:\\user"; //Carpeta ruta
            String fileName = "registro.txt"; //Nombre archivo
            File file = new File(ruta, fileName);
            if (!file.exists()) { //No existe el archivo
                f.mkdir();
                try {
                    file.createNewFile();
                } catch (IOException ex) {
                    System.out.println("Error");
                }
            }

            String dia = Integer.toString(dateC.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(dateC.getCalendar().get(Calendar.MONTH) + 1);
            String year = Integer.toString(dateC.getCalendar().get(Calendar.YEAR));
            String date = dia + "/" + mes + "/" + year;

            //Creation of File Descriptor for input file
            FileReader fr = null;
            try {
                fr = new FileReader(file); //Creation of File Reader object
            } catch (FileNotFoundException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            BufferedReader br = new BufferedReader(fr);  //Creation of BufferedReader object
            String s;
            int sw = 0;
            try {
                while ((s = br.readLine()) != null && sw == 0) //Reading the content line by line
                {
                    String[] words = s.split(","); //Split the word using space

                    if (words[0].equals(nombreF.getText())
                            && words[1].equals(direccion.getText())
                            && words[2].equals(celular.getText())
                            && words[3].equals(cedulaF.getText())
                            && words[4].equals(nombrePerro.getText())
                            && words[5].equals(razaF.getText())
                            && words[6].equals(colorF.getText())
                            && words[7].equals(date)) { //Search for the given word
                        sw = 1;
                        aviso.setText("Ya registro esta mascota");
                        JOptionPane.showMessageDialog(this, "Ya registro esta mascota");
                        nombreF.setText("");
                        razaF.setText("");
                        colorF.setText("");
                        direccion.setText("");
                        cedulaF.setText("");
                        dateC.setDate(null);
                        celular.setText("");
                        nombrePerro.setText("");
                    }

                }
                if (sw == 0) {
                    String cedula = cedulaF.getText();
                    String nombre = nombreF.getText();
                    String raza = razaF.getText();
                    String color = colorF.getText();
                    String dir = direccion.getText();
                    String cel = celular.getText();
                    String nomPer = nombrePerro.getText();

                    try (FileWriter fw = new FileWriter(file.getAbsoluteFile(), true)) {
                        BufferedWriter bw = new BufferedWriter(fw);
                        bw.write(nombre + "," + dir + "," + cel + "," + cedula + "," + nomPer + "," + raza + "," + color + "," + date);
                        bw.newLine();
                        bw.flush();
                        bw.close();
                        fw.close();

                    } catch (IOException ex) {
                        Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    DefaultTableModel model = (DefaultTableModel) table.getModel();
                    model.addRow(new Object[]{nombre, dir, cel, cedula, nomPer, raza, color, date});
                    tablaF.setVisible(true);
                    JOptionPane.showMessageDialog(this, "Se registro correctamente");
                }
            } catch (IOException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                fr.close();
            } catch (IOException ex) {
                Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_agregarNuevoRegistroActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed

    }//GEN-LAST:event_deleteBtnActionPerformed

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // Hacer Tabla editable

    }//GEN-LAST:event_saveBtnActionPerformed

    private void raiseBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raiseBtnActionPerformed

    }//GEN-LAST:event_raiseBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        nuevoC.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        nuevoC.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void actualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_actualizarActionPerformed
        if (((JTextField) dateC1.getDateEditor().getUiComponent()).getText().isEmpty()
                || nombreF1.getText().isEmpty()
                || direccion1.getText().isEmpty()
                || celular1.getText().isEmpty()
                || cedulaF1.getText().isEmpty()
                || razaF1.getText().isEmpty()
                || colorF1.getText().isEmpty()
                || nombrePerro1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los componentes");
        } else {
            File viejo = new File("c:\\user\\registro.txt");
            String temporal = "c:\\user\\temp.txt";
            File nuevo = new File(temporal);
            String dia = Integer.toString(dateC1.getCalendar().get(Calendar.DAY_OF_MONTH));
            String mes = Integer.toString(dateC1.getCalendar().get(Calendar.MONTH) + 1);
            String year = Integer.toString(dateC1.getCalendar().get(Calendar.YEAR));
            String newRaza = razaF1.getText();
            String newNombre = nombreF1.getText();
            String newColor = colorF1.getText();
            String newDate = dia + "/" + mes + "/" + year;
            String newCelular = celular1.getText();
            String newNomPerro = nombrePerro1.getText();
            String newDireccion = direccion1.getText();
            String newCedu = cedulaF1.getText();
            String cedula;
            String nombre;
            String dir;
            String cel;
            String raza;
            String color;
            String date;
            String nomPer;
            try {
                FileWriter fw = new FileWriter(temporal, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                x = new Scanner(new File("c:\\user\\registro.txt"));
                x.useDelimiter("[,\n]");
                while (x.hasNext()) {
                    nombre = x.next();
                    dir = x.next();
                    cel = x.next();
                    cedula = x.next();
                    nomPer = x.next();
                    raza = x.next();
                    color = x.next();
                    date = x.next();
                    if (nomPer.equals(tempo) && cedula.equals(ceduTemp)) {
                        pw.print(newNombre + "," + newDireccion + "," + newCelular + "," + newCedu + "," + newNomPerro + "," + newRaza + "," + newColor + "," + newDate + "\n");
                    } else {
                        pw.print(nombre + "," + dir + "," + cel + "," + cedula + "," + nomPer + "," + raza + "," + color + "," + date + "\n");
                    }
                }

                x.close();
                pw.flush();
                pw.close();
                viejo.delete();
                File dump = new File("c:\\user\\registro.txt");
                nuevo.renameTo(dump);
                JOptionPane.showMessageDialog(this, "Se actualizo correctamente");

                tempo = nombrePerro1.getText();
                ceduTemp = cedulaF1.getText();
            } catch (HeadlessException | IOException e) {
                System.out.println("error");
            }
        }
    }//GEN-LAST:event_actualizarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        if (cedulaF1.getText().isEmpty()
                || nombrePerro1.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los componentes");
        } else {

            File f = new File("c:\\user\\registro.txt");     //Creation of File Descriptor for input file
            if (f.exists()) {
                FileReader fr = null;
                try {
                    fr = new FileReader(f); //Creation of File Reader object
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader br = new BufferedReader(fr);  //Creation of BufferedReader object
                String s;
                int sw = 0;
                try {
                    while ((s = br.readLine()) != null && sw == 0) //Reading the content line by line
                    {
                        String[] words = s.split(","); //Split the word using space

                        for (String word : words) {
                            if (words[3].equals(cedulaF1.getText())
                                    && words[4].equals(nombrePerro1.getText())) //Search for the given word
                            {

                                razaF1.setVisible(true);
                                nombreF1.setVisible(true);
                                colorF1.setVisible(true);
                                direccion1.setVisible(true);
                                celular1.setVisible(true);
                                dateC1.setVisible(true);
                                nombrePerro1.setText(words[4]);
                                nombreF1.setText(words[0]);
                                tempo = words[4];
                                ceduTemp = words[3];
                                razaF1.setText(words[5]);
                                colorF1.setText(words[6]);
                                direccion1.setText(words[1]);
                                celular1.setText(words[2]);
                                Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(words[7]);
                                dateC1.setDate(date1);
                                sw = 1;
                                jButton5.setVisible(false);
                                actualizar.setVisible(true);
                            }

                        }
                    }
                    if (sw == 0) {
                        JOptionPane.showMessageDialog(this, "No hay ningun registro con estos datos");
                        cedulaF1.setText("");
                        nombrePerro1.setText("");
                        actualizar.setVisible(false);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ParseException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else { //No existe el archivo
                JOptionPane.showMessageDialog(this, "No hay nada que actualizar, por favor agrega una mascota");
                nombrePerro1.setText("");
                cedulaF1.setText("");
            }
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed

        razaF1.setVisible(false);
        nombreF1.setVisible(false);
        colorF1.setVisible(false);
        direccion1.setVisible(false);
        celular1.setVisible(false);
        dateC1.setVisible(false);
        actualizar.setVisible(false);
        cedulaF1.setText("");
        nombrePerro1.setText("");
        razaF1.setText("");
        nombreF1.setText("");
        colorF1.setText("");
        dateC1.setDate(null);
        direccion1.setText("");
        celular1.setText("");
        jButton5.setVisible(true);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void cedulaF1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaF1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaF1ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        nuevoC1.setVisible(false);
        cedulaF1.setText("");
        nombrePerro1.setText("");
        jButton5.setVisible(true);

    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void cedulaF3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaF3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaF3ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        if (cedulaF3.getText().isEmpty()
                || nomPerro2.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los componentes");
        } else {

            File f = new File("c:\\user\\registro.txt");     //Creation of File Descriptor for input file
            if (f.exists()) {
                FileReader fr = null;
                try {
                    fr = new FileReader(f); //Creation of File Reader object
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                BufferedReader br = new BufferedReader(fr);  //Creation of BufferedReader object
                String s;
                int sw = 0;
                try {
                    while ((s = br.readLine()) != null && sw == 0) //Reading the content line by line
                    {
                        String[] words = s.split(","); //Split the word using space

                        for (String word : words) {
                            if (words[3].equals(cedulaF3.getText())
                                    && words[4].equals(nomPerro2.getText())) //Search for the given word
                            {
                                cedulaF3.setEditable(false);
                                nomPerro2.setEditable(false);
                                tipo.setVisible(true);
                                diaCita.setVisible(true);
                                hora.setVisible(true);
                                agendar.setVisible(true);
                                sw = 1;
                                jButton10.setVisible(false);

                            }

                        }
                    }
                    if (sw == 0) {
                        JOptionPane.showMessageDialog(this, "No hay ningun registro con estos datos");
                        cedulaF3.setText("");
                        nomPerro2.setText("");
                        actualizar.setVisible(false);
                    }
                } catch (IOException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
                try {
                    fr.close();
                } catch (IOException ex) {
                    Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else { //No existe el archivo
                JOptionPane.showMessageDialog(this, "No hay ningun registro, por favor agrega una mascota antes de agendar");
                nomPerro2.setText("");
                cedulaF3.setText("");
            }
            JOptionPane.showMessageDialog(this, "Proceda a agendar");
        }


    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        citas.setVisible(false);
        cedulaF3.setText("");
        nomPerro2.setText("");
        jButton10.setVisible(true);
        cedulaF3.setEditable(true);
        nomPerro2.setEditable(true);// TODO add your handling code here:
    }//GEN-LAST:event_jButton12ActionPerformed

    private void agendarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendarActionPerformed

        if (((JTextField) diaCita.getDateEditor().getUiComponent()).
                getText().isEmpty()) {
            JOptionPane.showMessageDialog(this,
                    "Por favor rellena todos los componentes");
        } else {
            if (diaCita.getCalendar().get(Calendar.DAY_OF_WEEK)
                    == Calendar.SUNDAY
                    || diaCita.getCalendar().get(Calendar.DAY_OF_WEEK)
                    == Calendar.SATURDAY) {
                JOptionPane.showMessageDialog(this, "No trabajamos los "
                        + "sabados ni domingos");
            } else {
                if ((hora.getSelectedIndex() == 9 || hora.getSelectedIndex() == 18)
                        && (tipo.getSelectedIndex() == 0
                        || tipo.getSelectedIndex() == 5)) {
                    JOptionPane.showMessageDialog(this, "Ya que estas citas duran 1h, "
                            + "no puede colocarlas media hora antes del descanso o "
                            + "la salida a la 13:00 o 18:00 respectivamente");
                } else {
                    if ((hora.getSelectedIndex() == 8 || hora.getSelectedIndex() == 9 || hora.getSelectedIndex() == 10 || hora.getSelectedIndex() == 18 || hora.getSelectedIndex() == 17 || hora.getSelectedIndex() == 16)
                            && (tipo.getSelectedIndex() == 6)) {
                        JOptionPane.showMessageDialog(this,
                                "El baño dura dos horas, por favor seleccionalo "
                                + "dos horas antes de la hora de descanso "
                                + "(13:00) o la hora de salida (18:00)");
                    } else {
                        String sDir = "C:\\user";
                        File f = new File(sDir);
                        String ruta = "C:\\user"; //Carpeta ruta
                        String fileName = "citas.txt"; //Nombre archivo
                        File file = new File(ruta, fileName);
                        int swi = 0;
                        if (!file.exists()) { //No existe el archivo
                            f.mkdir();
                            try {
                                file.createNewFile();
                            } catch (IOException ex) {
                                System.out.println("Error");
                            }
                        }
                        if (tipo.getSelectedItem() == tipo.getItemAt(0)
                                | tipo.getSelectedItem() == tipo.getItemAt(5)) {
                            swi = 1;
                        }
                        String H = hora.getSelectedItem().toString();
                        int a = hora.getSelectedIndex() + 1;
                        String H1 = hora.getItemAt(a);
                        String dia = Integer.toString(diaCita.getCalendar().get(Calendar.DAY_OF_MONTH));
                        String mes = Integer.toString(diaCita.getCalendar().get(Calendar.MONTH) + 1);
                        String year = Integer.toString(diaCita.getCalendar().get(Calendar.YEAR));
                        String date = dia + "/" + mes + "/" + year;
                        System.out.println(date);
                        boolean confirmacion = false;
                        File f2 = new File("c:\\user\\citas.txt");     //Creation of File Descriptor for input file
                        FileReader fr = null;
                        try {
                            fr = new FileReader(f2); //Creation of File Reader object
                        } catch (FileNotFoundException ex) {
                            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        BufferedReader br = new BufferedReader(fr);  //Creation of BufferedReader object
                        String s;
                        int sw = 0;
                        try {
                            while ((s = br.readLine()) != null && sw == 0) //Reading the content line by line
                            {
                                String[] words = s.split(","); //Split the word using space

                                if (words[4].equals(H) && words[3].equals(date) && tipo.getSelectedIndex() != 4 && tipo.getSelectedIndex() != 6) { //Search for the given word
                                    sw = 1;
                                    JOptionPane.showMessageDialog(this, "Hora ocupada, por favor seleccione otra");
                                }

                            }
                            if (sw == 0) {

                                //Sacar información de los TextFields
                                String cedula = cedulaF3.getText();
                                String nombre = nomPerro2.getText();
                                String tipoC = tipo.getSelectedItem().toString();
                                String horaC = hora.getSelectedItem().toString();

                                try (FileWriter fw = new FileWriter(file.getAbsoluteFile(), true)) {
                                    BufferedWriter bw = new BufferedWriter(fw);
                                    bw.write(cedula + "," + nombre + "," + tipoC + "," + date + "," + horaC + "," + confirmacion);
                                    if (swi == 1) {
                                        bw.newLine();
                                        bw.write(cedula + "," + nombre + "," + "Continuacion de cita anterior" + "," + date + "," + H1 + "," + confirmacion);
                                    }
                                    bw.newLine();
                                    bw.flush();
                                    bw.close();
                                    fw.close();

                                } catch (IOException ex) {
                                    Logger.getLogger(admin.class.getName()).log(Level.SEVERE, null, ex);
                                }
                                DefaultTableModel model = (DefaultTableModel) table1.getModel();
                                if (swi == 1) {
                                    model.addRow(new Object[]{cedula, nombre, "continuacion de la cita anterior", date, hora});
                                } else {
                                    model.addRow(new Object[]{cedula, nombre, tipo, date, hora});
                                }

                                tablaF1.setVisible(true);
                                JOptionPane.showMessageDialog(this, "Agendada correctamente");
                            }
                        } catch (IOException ex) {
                            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        try {
                            fr.close();
                        } catch (IOException ex) {
                            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_agendarActionPerformed

    private void deleteBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteBtn1ActionPerformed

    private void saveBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveBtn1ActionPerformed

    private void raiseBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_raiseBtn1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_raiseBtn1ActionPerformed

    private void horaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horaActionPerformed

    private void addBtn3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtn3ActionPerformed

        tipo.setVisible(false);
        hora.setVisible(false);
        diaCita.setVisible(false);
        diaCita.setDate(null);
        jButton10.setVisible(true);
        cedulaF3.setEditable(true);
        nomPerro2.setEditable(true);// TODO add your handling code here:
        cedulaF3.setText("");
        nomPerro2.setText("");
        agendar.setVisible(false);
    }//GEN-LAST:event_addBtn3ActionPerformed

    private void addBtn4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtn4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_addBtn4ActionPerformed

    private void agendar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_agendar1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_agendar1ActionPerformed

    private void hora1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hora1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hora1ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        cont = 0;
        if (cedulaF4.getText().isEmpty()
                || nomPerro3.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor rellena todos los componentes");
        } else {

            String temporal = "c:\\user\\tempC.txt";
            File nuevo = new File(temporal);
            try {
                FileWriter fw = new FileWriter(temporal, true);
                BufferedWriter bw = new BufferedWriter(fw);
                PrintWriter pw = new PrintWriter(bw);
                x = new Scanner(new File("c:\\user\\citas.txt"));
                x.useDelimiter("[,\n]");
                while (x.hasNext()) {
                    String cedula = x.next();
                    String nomPerro = x.next();
                    String tipoCita = x.next();
                    String fechaCita = x.next();
                    String HoraCita = x.next();
                    String comprobacion = x.next();
                    if (cedulaF4.getText().equals(cedula) && nomPerro3.getText().equals(nomPerro)) {
                        pw.print(cedula + "," + nomPerro + "," + tipoCita + "," + fechaCita + "," + HoraCita + "," + comprobacion + "\n");
                        cont = cont + 1;
                    }
                }
                x.close();
                pw.flush();
                pw.close();
                //  viejo.delete();

                JOptionPane.showMessageDialog(this, "Se actualizo correctamente");

                tempo = nomPerro3.getText();
                ceduTemp = cedulaF1.getText();
            } catch (HeadlessException | IOException e) {
                System.out.println("error");
            }
            SpinnerModel sm = new SpinnerNumberModel(1, 1, cont, 1);
            numero.setModel(sm);
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void cedulaF4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cedulaF4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cedulaF4ActionPerformed

    private void numeroStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_numeroStateChanged
        int acum = Integer.parseInt(numero.getValue().toString());
        System.out.println(acum);
        File f2 = new File("c:\\user\\tempC.txt");     //Creation of File Descriptor for input file
        FileReader fr = null;
        try {
            fr = new FileReader(f2); //Creation of File Reader object
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }
        BufferedReader br = new BufferedReader(fr);  //Creation of BufferedReader object
        String s;
        int sw = 1;
        int swi = 0;
        try {
            while ((s = br.readLine()) != null && swi == 0) //Reading the content line by line
            {
                String[] words = s.split(","); //Split the word using space
                if (sw == acum) {
                    swi = 1;
                    Object o1 = words[2];
                    Object o2 = words[4];
                    tipo1.setSelectedItem(o1);
                    hora1.setSelectedItem(o2);
                    Date date1 = new SimpleDateFormat("dd/MM/yyyy").parse(words[3]);
                    
                    diaCita1.setDate(date1);
                } else {
                    sw = sw + 1;
                }
            }
        } catch (HeadlessException | IOException e) {
            System.out.println("error");
        } catch (ParseException ex) {
            Logger.getLogger(Cliente.class.getName()).log(Level.SEVERE, null, ex);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_numeroStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton actualizar;
    private javax.swing.JButton addBtn3;
    private javax.swing.JButton addBtn4;
    private javax.swing.JButton agendar;
    private javax.swing.JButton agendar1;
    private javax.swing.JButton agregarNuevoRegistro;
    private javax.swing.JLabel aviso;
    private javax.swing.JFormattedTextField cedulaF;
    private javax.swing.JFormattedTextField cedulaF1;
    private javax.swing.JFormattedTextField cedulaF3;
    private javax.swing.JFormattedTextField cedulaF4;
    private javax.swing.JFormattedTextField celular;
    private javax.swing.JFormattedTextField celular1;
    private javax.swing.JFrame citas;
    private javax.swing.JTextField colorF;
    private javax.swing.JTextField colorF1;
    private com.toedter.calendar.JDateChooser dateC;
    private com.toedter.calendar.JDateChooser dateC1;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JButton deleteBtn1;
    private com.toedter.calendar.JDateChooser diaCita;
    private com.toedter.calendar.JDateChooser diaCita1;
    private javax.swing.JTextField direccion;
    private javax.swing.JTextField direccion1;
    private javax.swing.JComboBox<String> hora;
    private javax.swing.JComboBox<String> hora1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField nomPerro2;
    private javax.swing.JTextField nomPerro3;
    private javax.swing.JTextField nombreF;
    private javax.swing.JTextField nombreF1;
    private javax.swing.JTextField nombrePerro;
    private javax.swing.JTextField nombrePerro1;
    private javax.swing.JFrame nuevoC;
    private javax.swing.JFrame nuevoC1;
    private javax.swing.JSpinner numero;
    private javax.swing.JButton raiseBtn;
    private javax.swing.JButton raiseBtn1;
    private javax.swing.JTextField raiseTF;
    private javax.swing.JTextField raiseTF1;
    private javax.swing.JTextField razaF;
    private javax.swing.JTextField razaF1;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton saveBtn1;
    private javax.swing.JFrame tablaF;
    private javax.swing.JFrame tablaF1;
    private javax.swing.JTable table;
    private javax.swing.JTable table1;
    private javax.swing.JComboBox<String> tipo;
    private javax.swing.JComboBox<String> tipo1;
    private javax.swing.JLabel valido;
    private javax.swing.JLabel valido1;
    // End of variables declaration//GEN-END:variables
}
